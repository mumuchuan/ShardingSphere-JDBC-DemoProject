#spring:
#  shardingsphere:
#    datasource:
#      names: ds0,ds1,ds2
#      ds0:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&serverTimezone=UTC
#        username: root
#        password: hb135119
#      ds1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&serverTimezone=UTC
#        username: root
#        password: hb135119
#      ds2:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://localhost:3306/demo_ds_2?useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true&serverTimezone=UTC
#        username: root
#        password: hb135119
#    sharding:
#      tables:
#        t_order:
#          actual-data-nodes: ds${0..1}.t_order_${0..1}
#          database-strategy:
#            inline:
#              sharding-column: order_id
#              algorithm-expression: ds$->{order_id % 2}
#          table-strategy:
#            inline:
#              sharding-column: user_id
#              algorithm-expression: t_order_$->{user_id % 2}
#          key-generator:
#            type: SNOWFLAKE
#            column: order_id
#    props:
#      sql:
#        show: true
#      executor:
#        size: 12